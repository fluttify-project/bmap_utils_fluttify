// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_utils_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class BMKMapSize extends NSObject  {
  //region constants
  static const String name__ = 'BMKMapSize';

  @override
  final String tag__ = 'bmap_utils_fluttify';

  
  //endregion

  //region creators
  static Future<BMKMapSize?> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kBmapUtilsFluttifyChannel.invokeMethod(
      'ObjectFactory::createBMKMapSize',
      {'init': init}
    );
    return BmapUtilsFluttifyIOSAs<BMKMapSize?>(__result__);
  }
  
  static Future<List<BMKMapSize>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kBmapUtilsFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchBMKMapSize',
      {'length': length, 'init': init}
    );
    return __result_batch__
        ?.map((it) => BmapUtilsFluttifyIOSAs<BMKMapSize>(it))
        .where((element) => element !=null)
        .cast<BMKMapSize>()
        .toList() ?? <BMKMapSize>[];
  }
  
  //endregion

  //region getters
  Future<double?> get_width() async {
    final __result__ = await kBmapUtilsFluttifyChannel.invokeMethod("BMKMapSize::get_width", {'__this__': this});
    return __result__;
  }
  
  Future<double?> get_height() async {
    final __result__ = await kBmapUtilsFluttifyChannel.invokeMethod("BMKMapSize::get_height", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_width(double width) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKMapSize::set_width', <String, dynamic>{'__this__': this, "width": width});
  
  
  }
  
  Future<void> set_height(double height) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKMapSize::set_height', <String, dynamic>{'__this__': this, "height": height});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'BMKMapSize{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension BMKMapSize_Batch on List<BMKMapSize> {
  String? get refId {
    if (isEmpty) return null;
    return first.refId;
  }

  //region getters
  Future<List<double?>> get_width_batch() async {
    final resultBatch = await kBmapUtilsFluttifyChannel.invokeMethod("BMKMapSize::get_width_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<double?>().toList();
  }
  
  Future<List<double?>> get_height_batch() async {
    final resultBatch = await kBmapUtilsFluttifyChannel.invokeMethod("BMKMapSize::get_height_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<double?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_width_batch(List<double> width) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKMapSize::set_width_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "width": width[__i__]}]);
  
  
  }
  
  Future<void> set_height_batch(List<double> height) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKMapSize::set_height_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "height": height[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}