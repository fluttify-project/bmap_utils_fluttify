// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_utils_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class BMKFavPoiInfo extends NSObject  {
  //region constants
  static const String name__ = 'BMKFavPoiInfo';

  
  //endregion

  //region creators
  static Future<BMKFavPoiInfo> create__() async {
    final int refId = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('ObjectFactory::createBMKFavPoiInfo');
    final object = BMKFavPoiInfo()..refId = refId..tag__ = 'bmap_utils_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<BMKFavPoiInfo>> create_batch__(int length) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('ObjectFactory::create_batchBMKFavPoiInfo', {'length': length});
  
    final List<BMKFavPoiInfo> typedResult = resultBatch.map((result) => BMKFavPoiInfo()..refId = result..tag__ = 'bmap_utils_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<String> get_favId() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_favId", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_poiName() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_poiName", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_poiUid() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_poiUid", {'refId': refId});
  
    return __result__;
  }
  
  Future<CLLocationCoordinate2D> get_pt() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_pt", {'refId': refId});
    kNativeObjectPool.add(CLLocationCoordinate2D()..refId = __result__..tag__ = 'bmap_utils_fluttify');
    return CLLocationCoordinate2D()..refId = __result__..tag__ = 'bmap_utils_fluttify';
  }
  
  Future<String> get_address() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_address", {'refId': refId});
  
    return __result__;
  }
  
  Future<String> get_cityName() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_cityName", {'refId': refId});
  
    return __result__;
  }
  
  Future<int> get_timeStamp() async {
    final __result__ = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_timeStamp", {'refId': refId});
  
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_favId(String favId) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_favId', {'refId': refId, "favId": favId});
  
  
  }
  
  Future<void> set_poiName(String poiName) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_poiName', {'refId': refId, "poiName": poiName});
  
  
  }
  
  Future<void> set_poiUid(String poiUid) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_poiUid', {'refId': refId, "poiUid": poiUid});
  
  
  }
  
  Future<void> set_pt(CLLocationCoordinate2D pt) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_pt', {'refId': refId, "pt": pt.refId});
  
  
  }
  
  Future<void> set_address(String address) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_address', {'refId': refId, "address": address});
  
  
  }
  
  Future<void> set_cityName(String cityName) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_cityName', {'refId': refId, "cityName": cityName});
  
  
  }
  
  Future<void> set_timeStamp(int timeStamp) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_timeStamp', {'refId': refId, "timeStamp": timeStamp});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension BMKFavPoiInfo_Batch on List<BMKFavPoiInfo> {
  //region getters
  Future<List<String>> get_favId_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_favId_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_poiName_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_poiName_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_poiUid_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_poiUid_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<CLLocationCoordinate2D>> get_pt_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_pt_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => CLLocationCoordinate2D()..refId = __result__..tag__ = 'bmap_utils_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  Future<List<String>> get_address_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_address_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_cityName_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_cityName_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<String>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_timeStamp_batch() async {
    final resultBatch = await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod("BMKFavPoiInfo::get_timeStamp_batch", [for (final __item__ in this) {'refId': __item__.refId}]);
    final typedResult = (resultBatch as List).cast<int>().map((__result__) => __result__).toList();
  
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_favId_batch(List<String> favId) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_favId_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "favId": favId[__i__]}]);
  
  
  }
  
  Future<void> set_poiName_batch(List<String> poiName) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_poiName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "poiName": poiName[__i__]}]);
  
  
  }
  
  Future<void> set_poiUid_batch(List<String> poiUid) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_poiUid_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "poiUid": poiUid[__i__]}]);
  
  
  }
  
  Future<void> set_pt_batch(List<CLLocationCoordinate2D> pt) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_pt_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "pt": pt[__i__].refId}]);
  
  
  }
  
  Future<void> set_address_batch(List<String> address) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_address_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "address": address[__i__]}]);
  
  
  }
  
  Future<void> set_cityName_batch(List<String> cityName) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_cityName_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "cityName": cityName[__i__]}]);
  
  
  }
  
  Future<void> set_timeStamp_batch(List<int> timeStamp) async {
    await MethodChannel('com.fluttify/bmap_utils_fluttify').invokeMethod('BMKFavPoiInfo::set_timeStamp_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'refId': this[__i__].refId, "timeStamp": timeStamp[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}