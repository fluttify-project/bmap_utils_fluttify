// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:bmap_utils_fluttify/src/ios/ios.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

class BMKOpenPoiNearbyOption extends BMKOpenOption  {
  //region constants
  static const String name__ = 'BMKOpenPoiNearbyOption';

  @override
  final String tag__ = 'bmap_utils_fluttify';

  
  //endregion

  //region creators
  static Future<BMKOpenPoiNearbyOption?> create__({ bool init = true /* ios only */ }) async {
    final __result__ = await kBmapUtilsFluttifyChannel.invokeMethod(
      'ObjectFactory::createBMKOpenPoiNearbyOption',
      {'init': init}
    );
    return BmapUtilsFluttifyIOSAs<BMKOpenPoiNearbyOption?>(__result__);
  }
  
  static Future<List<BMKOpenPoiNearbyOption>> create_batch__(int length, { bool init = true /* ios only */ }) async {
    assert(true);
    final __result_batch__ = await  kBmapUtilsFluttifyChannel.invokeListMethod(
      'ObjectFactory::create_batchBMKOpenPoiNearbyOption',
      {'length': length, 'init': init}
    );
    return __result_batch__
        ?.map((it) => BmapUtilsFluttifyIOSAs<BMKOpenPoiNearbyOption>(it))
        .where((element) => element !=null)
        .cast<BMKOpenPoiNearbyOption>()
        .toList() ?? <BMKOpenPoiNearbyOption>[];
  }
  
  //endregion

  //region getters
  Future<CLLocationCoordinate2D?> get_location() async {
    final __result__ = await kBmapUtilsFluttifyChannel.invokeMethod("BMKOpenPoiNearbyOption::get_location", {'__this__': this});
    return BmapUtilsFluttifyIOSAs<CLLocationCoordinate2D>(__result__);
  }
  
  Future<int?> get_radius() async {
    final __result__ = await kBmapUtilsFluttifyChannel.invokeMethod("BMKOpenPoiNearbyOption::get_radius", {'__this__': this});
    return __result__;
  }
  
  Future<String?> get_keyword() async {
    final __result__ = await kBmapUtilsFluttifyChannel.invokeMethod("BMKOpenPoiNearbyOption::get_keyword", {'__this__': this});
    return __result__;
  }
  
  //endregion

  //region setters
  Future<void> set_location(CLLocationCoordinate2D location) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKOpenPoiNearbyOption::set_location', <String, dynamic>{'__this__': this, "location": location});
  
  
  }
  
  Future<void> set_radius(int radius) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKOpenPoiNearbyOption::set_radius', <String, dynamic>{'__this__': this, "radius": radius});
  
  
  }
  
  Future<void> set_keyword(String keyword) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKOpenPoiNearbyOption::set_keyword', <String, dynamic>{'__this__': this, "keyword": keyword});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion

  @override
  String toString() {
    return 'BMKOpenPoiNearbyOption{refId: $refId, runtimeType: $runtimeType, tag__: $tag__}';
  }
}

extension BMKOpenPoiNearbyOption_Batch on List<BMKOpenPoiNearbyOption> {
  String? get refId {
    if (isEmpty) return null;
    return first.refId;
  }

  //region getters
  Future<List<CLLocationCoordinate2D?>> get_location_batch() async {
    final resultBatch = await kBmapUtilsFluttifyChannel.invokeMethod("BMKOpenPoiNearbyOption::get_location_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => BmapUtilsFluttifyIOSAs<CLLocationCoordinate2D>(__result__)).cast<CLLocationCoordinate2D?>().toList();
  }
  
  Future<List<int?>> get_radius_batch() async {
    final resultBatch = await kBmapUtilsFluttifyChannel.invokeMethod("BMKOpenPoiNearbyOption::get_radius_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<int?>().toList();
  }
  
  Future<List<String?>> get_keyword_batch() async {
    final resultBatch = await kBmapUtilsFluttifyChannel.invokeMethod("BMKOpenPoiNearbyOption::get_keyword_batch", [for (final __item__ in this) {'__this__': __item__}]);
    return (resultBatch as List).map((__result__) => __result__).cast<String?>().toList();
  }
  
  //endregion

  //region setters
  Future<void> set_location_batch(List<CLLocationCoordinate2D> location) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKOpenPoiNearbyOption::set_location_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "location": location[__i__]}]);
  
  
  }
  
  Future<void> set_radius_batch(List<int> radius) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKOpenPoiNearbyOption::set_radius_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "radius": radius[__i__]}]);
  
  
  }
  
  Future<void> set_keyword_batch(List<String> keyword) async {
    await kBmapUtilsFluttifyChannel.invokeMethod('BMKOpenPoiNearbyOption::set_keyword_batch', [for (int __i__ = 0; __i__ < this.length; __i__++) {'__this__': this[__i__], "keyword": keyword[__i__]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}